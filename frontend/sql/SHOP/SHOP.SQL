CREATE TABLE USERS
(
      ID BIGINT PRIMARY KEY IDENTITY,
      EMAIL VARCHAR(100)    NOT NULL,
      PASSWORD VARCHAR(100) NOT NULL,
)

DROP TABLE USERS

INSERT INTO USERS(EMAIL, PASSWORD)
VALUES ('these9907@naver.com', 'star8903')

INSERT INTO USERS
SELECT EMAIL, PASSWORD
FROM USERS

SELECT *
FROM USERS

SELECT COUNT(*)
FROM USERS

CREATE TABLE PRODUCT
(
      ID BIGINT PRIMARY KEY IDENTITY,
      NAME VARCHAR(100) NOT NULL,
      PRICE BIGINT      NOT NULL,
      IMAGE VARCHAR(3000)
)

DROP TABLE PRODUCT

INSERT INTO PRODUCT(NAME, PRICE, IMAGE)
VALUES ('MACBOOK', 50000, '')

SELECT *
FROM PRODUCT

-- RANDOM 스트링 생성
SELECT NEWID()
FROM USERS

CREATE TABLE ORDERS
(
      ID BIGINT PRIMARY KEY IDENTITY,
      ORDERID VARCHAR(200) NOT NULL,
      USER_ID BIGINT       NOT NULL,
      PRODUCT_ID BIGINT    NOT NULL,
      CONSTRAINT FK_ORDERS_USER FOREIGN KEY (USER_ID) REFERENCES USERS (ID) ON DELETE CASCADE,
      CONSTRAINT FK_ORDERS_PRODUCT FOREIGN KEY (PRODUCT_ID) REFERENCES ORDERS (ID)
)

SELECT *
FROM ORDERS

INSERT INTO ORDERS(ORDERID, USER_ID, PRODUCT_ID)
VALUES (NEWID(), 1, 1)

DROP TABLE ORDERS

SELECT *
FROM USERS A
INNER JOIN ORDERS B ON A.ID = B.USER_ID

SELECT *
FROM PRODUCT A
INNER JOIN ORDERS B ON A.ID = B.PRODUCT_ID

SELECT *
FROM ORDERS

SELECT COUNT(*)
FROM ORDERS

INSERT INTO ORDERS
SELECT NEWID() AS ORDERID, ID AS USER_ID, 1 AS PRODUCT_ID
FROM USERS

SELECT COUNT(*)
FROM USERS A
INNER JOIN (SELECT * FROM ORDERS) B ON A.ID = B.USER_ID
GROUP BY A.EMAIL